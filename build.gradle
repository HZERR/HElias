buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "io.reactivex.rxjava3:rxjava:3.0.11"
        classpath group: 'com.jfoenix', name: 'jfoenix', version: '8.0.10'
        classpath group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'
        classpath group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
        classpath group: 'commons-io', name: 'commons-io', version: '2.11.0'
        classpath group: 'net.lingala.zip4j', name: 'zip4j', version: '2.7.0'
        classpath group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
        classpath fileTree(dir: 'lib', include: ['*.jar'])
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'ru.hzerr'
version '1.0-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
//    implementation 'me.champeau.gradle:jmh-gradle-plugin:0.2.0', 'net.ltgt.gradle:gradle-apt-plugin:0.21'
    implementation 'junit:junit:4.13.2'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testAnnotationProcessor group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.32'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation group: 'io.micrometer', name: 'micrometer-core', version: '1.7.3'
    implementation group: 'io.projectreactor.netty', name: 'reactor-netty', version: '1.0.10'
    implementation group: 'org.openjdk.jmh', name: 'jmh-generator-reflection', version: '1.32'
    implementation group: 'org.openjdk.jmh', name: 'jmh-generator-bytecode', version: '1.32'
    implementation group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.32'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation group: 'com.jfoenix', name: 'jfoenix', version: '8.0.10'
    implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.7.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.2'
    implementation fileTree(dir: 'lib', include: ['*.jar'])
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
//    options.compilerArgs += "--enable-preview"
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
//    jvmArgs += "--enable-preview"
    jvmArgs += "-Dfile.encoding=UTF-8"
}

tasks.withType(JavaExec) {
//    jvmArgs += "--enable-preview"
    jvmArgs += "-Dfile.encoding=UTF-8"
}

task ResetConfig(type: JavaExec) {
    group = "dev"
    description = "Resets the configuration file to the factory settings"
    classpath = sourceSets.main.runtimeClasspath
    main = "ru.hzerr.dev.ConfigResetTask"
}

task ClearLogFiles(type: JavaExec) {
    group = "dev"
    description = "Deletes the log files of the programs"
    classpath = sourceSets.main.runtimeClasspath
    main = "ru.hzerr.dev.ClearLogTask"
}

task PrependProperty(type: JavaExec) {
    group = "dev"
    description = "Prepend property"
    classpath = sourceSets.main.runtimeClasspath
    main = "ru.hzerr.dev.PrependPropertyTask"
}

//jar {
//    manifest {
//        attributes(
//                'Main-Class': 'ru.hzerr.HPatcher'
//        )
//    }
//}
// -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled
// -XX:+DisableExplicitGC
// -XX:+UseParNewGC
// -XX:+UseConcMarkSweepGC
// -XX:+AggressiveOpts
// -XX:+UseCompressedStrings
// -XX:-OmitStackTraceInFastThrow
shadowJar {
    archiveBaseName.set('helias')
    archiveVersion.set('1.0.1')
    archiveClassifier.set('row')
    getDestinationDirectory().set(new File("${projectDir}/build"))
}